[{"C:\\projetos\\js\\minhas-financas-app\\src\\index.js":"1","C:\\projetos\\js\\minhas-financas-app\\src\\views\\login.js":"2","C:\\projetos\\js\\minhas-financas-app\\src\\components\\card.js":"3","C:\\projetos\\js\\minhas-financas-app\\src\\components\\form-group.js":"4","C:\\projetos\\js\\minhas-financas-app\\src\\views\\cadastroUsuario.js":"5","C:\\projetos\\js\\minhas-financas-app\\src\\main\\App.js":"6","C:\\projetos\\js\\minhas-financas-app\\src\\main\\rotas.js":"7","C:\\projetos\\js\\minhas-financas-app\\src\\components\\navbar.js":"8","C:\\projetos\\js\\minhas-financas-app\\src\\components\\navbaritem.js":"9","C:\\projetos\\js\\minhas-financas-app\\src\\views\\home.js":"10","C:\\projetos\\js\\minhas-financas-app\\src\\app\\apiservice.js":"11","C:\\projetos\\js\\minhas-financas-app\\src\\app\\services\\usuarioService.js":"12","C:\\projetos\\js\\minhas-financas-app\\src\\app\\services\\localStorageService.js":"13","C:\\projetos\\js\\minhas-financas-app\\src\\components\\toastr.js":"14","C:\\projetos\\js\\minhas-financas-app\\src\\components\\SelectMenu.js":"15","C:\\projetos\\js\\minhas-financas-app\\src\\views\\lancamentos\\consulta-lancamentos.js":"16","C:\\projetos\\js\\minhas-financas-app\\src\\views\\lancamentos\\lancamentosTable.js":"17","C:\\projetos\\js\\minhas-financas-app\\src\\app\\services\\lancamentoService.js":"18","C:\\projetos\\js\\minhas-financas-app\\src\\views\\lancamentos\\cadastro-lancamentos.js":"19","C:\\projetos\\js\\minhas-financas-app\\src\\app\\services\\exception\\ErroValidacao.js":"20","C:\\projetos\\js\\minhas-financas-app\\src\\components\\icon.js":"21","C:\\projetos\\js\\minhas-financas-app\\src\\app\\services\\authService.js":"22"},{"size":154,"mtime":1607695298805,"results":"23","hashOfConfig":"24"},{"size":5174,"mtime":1608680713641,"results":"25","hashOfConfig":"24"},{"size":419,"mtime":1607641727643,"results":"26","hashOfConfig":"24"},{"size":259,"mtime":1608160596431,"results":"27","hashOfConfig":"24"},{"size":5072,"mtime":1608490536100,"results":"28","hashOfConfig":"24"},{"size":897,"mtime":1608136267994,"results":"29","hashOfConfig":"24"},{"size":3143,"mtime":1608677307398,"results":"30","hashOfConfig":"24"},{"size":2018,"mtime":1608680441242,"results":"31","hashOfConfig":"24"},{"size":426,"mtime":1608680106753,"results":"32","hashOfConfig":"24"},{"size":2028,"mtime":1608210494001,"results":"33","hashOfConfig":"24"},{"size":756,"mtime":1608477643804,"results":"34","hashOfConfig":"24"},{"size":1412,"mtime":1608484800786,"results":"35","hashOfConfig":"24"},{"size":800,"mtime":1608680621382,"results":"36","hashOfConfig":"24"},{"size":1041,"mtime":1608491844544,"results":"37","hashOfConfig":"24"},{"size":368,"mtime":1608235906895,"results":"38","hashOfConfig":"24"},{"size":10466,"mtime":1608491921211,"results":"39","hashOfConfig":"24"},{"size":2606,"mtime":1608491056309,"results":"40","hashOfConfig":"24"},{"size":2085,"mtime":1608487175033,"results":"41","hashOfConfig":"24"},{"size":10513,"mtime":1608491170420,"results":"42","hashOfConfig":"24"},{"size":108,"mtime":1608480367011,"results":"43","hashOfConfig":"24"},{"size":1802,"mtime":1608651025571,"results":"44","hashOfConfig":"24"},{"size":413,"mtime":1608680827916,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"slowhe",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projetos\\js\\minhas-financas-app\\src\\index.js",[],["95","96"],"C:\\projetos\\js\\minhas-financas-app\\src\\views\\login.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\components\\card.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\components\\form-group.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\views\\cadastroUsuario.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\main\\App.js",["97"],"import React from 'react';\r\n\r\n// css\r\nimport 'bootswatch/dist/flatly/bootstrap.css';\r\nimport '../custom.css';\r\n\r\n// biblioteca de mensagens\r\nimport 'toastr/build/toastr.css';\r\n\r\n// custom componentes\r\nimport Rotas from './rotas';\r\nimport Navbar from '../components/navbar';\r\n\r\n// biblioteca para mostrar mensagens de sucesso\r\n// e erro para usuário\r\nimport 'toastr/build/toastr.min.js';\r\n\r\n// import do prime react\r\nimport 'primereact/resources/themes/fluent-light/theme.css'\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\n// import do botao\r\nimport { Button } from 'primereact/button';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    nome: 'Douglas'\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"container\">\r\n          <Rotas />\r\n        </div>\r\n      </>\r\n    )\r\n  };\r\n}\r\n\r\nexport default App;\r\n","C:\\projetos\\js\\minhas-financas-app\\src\\main\\rotas.js",["98"],"C:\\projetos\\js\\minhas-financas-app\\src\\components\\navbar.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\components\\navbaritem.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\views\\home.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\app\\apiservice.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\app\\services\\usuarioService.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\app\\services\\localStorageService.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\components\\toastr.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\components\\SelectMenu.js",["99"],"import React from 'react';\r\n\r\nexport default (props) => {\r\n\r\n    const options = props.lista.map( (option, index) => {\r\n        return (\r\n            <option key={index} value={option.value}>\r\n                    {option.label}\r\n            </option>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <select  {...props}>\r\n            {options}\r\n        </select>\r\n    )\r\n}","C:\\projetos\\js\\minhas-financas-app\\src\\views\\lancamentos\\consulta-lancamentos.js",["100"],"import React from 'react';\r\n\r\n//react router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Card from '../../components/card';\r\nimport FormGroup from '../../components/form-group';\r\nimport SelectMenu from '../../components/SelectMenu';\r\nimport LancamentosTable from './lancamentosTable';\r\nimport LancamentoService from '../../app/services/lancamentoService';\r\nimport LocalStorageService from '../../app/services/localStorageService';\r\n\r\n// import do modal do primereact\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport '../../Dialog.css';\r\n\r\n// toastr para mostrar mensagens para o usuário\r\n// '* as message' significa import dudo que está dentro de toastr\r\nimport * as message from '../../components/toastr';\r\nimport Icone from '../../components/icon';\r\n\r\nclass ConsultaLancamentos extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.lancamentoService = new LancamentoService();\r\n        this.usuario = LocalStorageService.obterUsuarioLogado();\r\n    }\r\n\r\n    state = {\r\n        ano: '',\r\n        mes: '',\r\n        tipo: '',\r\n        status: '',\r\n        usuario: '',\r\n        descricao: '',\r\n        lancamentos: [],\r\n        showConfirmDialog: false,\r\n        lancamentoDeletar: {}\r\n    }\r\n\r\n    deletar = () => {\r\n        const lancamentoDeletar = this.state.lancamentoDeletar;\r\n        this.lancamentoService\r\n            .deletar(lancamentoDeletar.id)\r\n            .then(resposta => {\r\n                //remove o elemento deletado do array\r\n                const lancamentos = this.state.lancamentos;\r\n                const index = lancamentos.indexOf(lancamentoDeletar);\r\n                /*\r\n                O splice recebe dois parâmetros, o index que ele tem que deletar\r\n                e quantos elementos ele tem que deletar a partir do index passado.\r\n                */\r\n                lancamentos.splice(index, 1);\r\n                message.mensagemSucesso('Lançamento deletado com sucesso');\r\n\r\n                //atualiza o stado de lançamentos\r\n                this.setState({ lancamentos })\r\n            }).catch(error => {\r\n                message.mensagemErro(error.resposta.data);\r\n            });\r\n\r\n        this.setState({\r\n            showConfirmDialog: false\r\n        })\r\n    }\r\n\r\n    montaMsgErro = (campo) => {\r\n        return `O preenchimento do campo ${campo} é obrigatório`;\r\n    }\r\n\r\n    buscar = () => {\r\n\r\n        if (!this.state.ano) {\r\n            message.mensagemErro(this.montaMsgErro('Ano'));\r\n            return false;\r\n        }\r\n\r\n        const lancamentoFiltro = {\r\n            ano: this.state.ano,\r\n            mes: this.state.mes,\r\n            tipo: this.state.tipo,\r\n            descricao: this.state.descricao,\r\n            usuario: this.usuario.id\r\n        }\r\n\r\n        this.lancamentoService.consultar(lancamentoFiltro)\r\n            .then(resposta => {\r\n                const lista = resposta.data;\r\n                if( lista.length === 0 ) {\r\n                    message.mensagemAlerta('Nenhum registro foi encontrado para o filtro informado');\r\n                }\r\n                this.setState({\r\n                    lancamentos: resposta.data\r\n                })\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    atualizarStatus = (lancamento, status) => {\r\n\r\n        this.lancamentoService\r\n            .atualizarStatus(lancamento.id, status)\r\n            .then(response => {\r\n                message.mensagemSucesso('Atualizado com sucesso');\r\n\r\n                const lancamentosParaAlterar = this.state.lancamentos;\r\n                const indexOf = lancamentosParaAlterar.indexOf(lancamento);\r\n\r\n                lancamentosParaAlterar.map((lan, index) => {\r\n                    if (index === indexOf) {\r\n                        let lancamentoStatusAlterado = lan;\r\n                        lancamentoStatusAlterado.status = status;\r\n                        return lancamentoStatusAlterado;\r\n                    }\r\n                });\r\n\r\n                this.setState({ lancamentos: lancamentosParaAlterar });\r\n\r\n            }).catch(error => {\r\n                message.mensagemErro(error.response.data);\r\n            })\r\n    }\r\n\r\n    renderFooter = () => {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    label=\"Cancelar\"\r\n                    icon=\"pi pi-times\"\r\n                    onClick={() => this.cancelarDelecao()}\r\n                    className=\"p-button-text\" />\r\n                <Button\r\n                    label=\"Confirmar\"\r\n                    icon=\"pi pi-check\"\r\n                    onClick={() => this.deletar()}\r\n                    autoFocus />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    abrirConfirmacao = (lancamento) => {\r\n        this.setState({\r\n            showConfirmDialog: true,\r\n            lancamentoDeletar: lancamento\r\n        })\r\n    }\r\n\r\n    cancelarDelecao = () => {\r\n        this.setState({\r\n            showConfirmDialog: false,\r\n            lancamentoDeletar: {}\r\n        })\r\n    }\r\n\r\n    preparaFormularioCadastro = () => {\r\n        this.props.history.push('/cadastro-lancamentos');\r\n    }\r\n\r\n    editar = (id) => {\r\n        this.props.history.push(`/cadastro-lancamentos/${id}`);\r\n    }\r\n\r\n    render() {\r\n        const meses = [\r\n            { label: 'Selecione...', value: '' },\r\n            { label: 'Janeiro', value: 1 },\r\n            { label: 'Fevereiro', value: 2 },\r\n            { label: 'Março', value: 3 },\r\n            { label: 'Abril', value: 4 },\r\n            { label: 'Março', value: 5 },\r\n            { label: 'Junho', value: 6 },\r\n            { label: 'Julho', value: 7 },\r\n            { label: 'Agosto', value: 8 },\r\n            { label: 'Setembro', value: 9 },\r\n            { label: 'Outubro', value: 10 },\r\n            { label: 'Novembro', value: 11 },\r\n            { label: 'Dezembro', value: 12 },\r\n        ]\r\n\r\n        const tipos = [\r\n            { label: 'Selecione...', value: '' },\r\n            { label: 'Despesa', value: 'DESPESA' },\r\n            { label: 'Receita', value: 'RECEITA' },\r\n        ]\r\n\r\n        return (\r\n            <Card title=\"Consulda Lançamentos\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"bs-component\">\r\n                            <FormGroup htmlFor=\"inputAno\" label=\"Ano: *\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"inputAno\"\r\n                                    aria-describedby=\"emailHelp\"\r\n                                    placeholder=\"Digite o Ano\"\r\n                                    value={this.state.ano}\r\n                                    onChange={(e) => this.setState({ ano: e.target.value })} />\r\n                            </FormGroup>\r\n                            <FormGroup htmlFor=\"inputMes\" label=\"Mês:\">\r\n                                <SelectMenu\r\n                                    lista={meses}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputMes\"\r\n                                    value={this.state.mes}\r\n                                    onChange={(e) => this.setState({ mes: e.target.value })} />\r\n                            </FormGroup>\r\n                            <FormGroup htmlFor=\"inputMes\" label=\"Tipo:\">\r\n                                <SelectMenu\r\n                                    lista={tipos}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputMes\"\r\n                                    value={this.state.tipo}\r\n                                    onChange={(e) => this.setState({ tipo: e.target.value })} />\r\n                            </FormGroup>\r\n                            <FormGroup htmlFor=\"inputDescricao\" label=\"Descricao:\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"inputDescricao\"\r\n                                    value={this.state.descricao}\r\n                                    onChange={(e) => this.setState({ descricao: e.target.value })} />\r\n                            </FormGroup>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-success\"\r\n                                onClick={this.buscar} >\r\n                                <Icone tipoIcone='buscar'>\r\n                                    Buscar\r\n                                </Icone>\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={this.preparaFormularioCadastro}>\r\n                                <Icone tipoIcone='cadastrar'>\r\n                                    Cadastrar\r\n                                </Icone>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"bs-component\">\r\n                            <LancamentosTable\r\n                                lancamentos={this.state.lancamentos}\r\n                                deletar={this.abrirConfirmacao}\r\n                                editar={this.editar}\r\n                                atualizarStatus={this.atualizarStatus}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Dialog\r\n                        header=\"Header\"\r\n                        visible={this.state.showConfirmDialog}\r\n                        style={{ width: '50vw' }}\r\n                        modal={true}\r\n                        footer={this.renderFooter()}\r\n                        onHide={() => this.setState({ showConfirmDialog: false })}>\r\n                        <p>Confirma a exclusão deste lançamento?</p>\r\n                    </Dialog>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ConsultaLancamentos);","C:\\projetos\\js\\minhas-financas-app\\src\\views\\lancamentos\\lancamentosTable.js",["101"],"import React from 'react';\r\n\r\nimport currencyFormatter from 'currency-formatter';\r\nimport Icone from '../../components/icon';\r\n\r\nexport default props => {\r\n\r\n    const rows = props.lancamentos.map(lancamento => {\r\n        return (\r\n            <tr key={lancamento.id}>\r\n                <td>{lancamento.descricao}</td>\r\n                <td>{currencyFormatter.format(lancamento.valor, { locale: 'pt-BR' })}</td>\r\n                <td>{lancamento.tipo}</td>\r\n                <td>{lancamento.mes}</td>\r\n                <td>{lancamento.status}</td>\r\n                <td>\r\n                    <button\r\n                        type=\"button\"\r\n                        title = \"Efetivar\"\r\n                        className=\"btn btn-success\"\r\n                        disabled = { lancamento.status !== 'PENDENTE' }\r\n                        onClick={e => props.atualizarStatus(lancamento, 'EFETIVADO')} >\r\n                        <Icone tipoIcone='efetivarLancamento' />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        title = \"Cancelar\"\r\n                        className=\"btn btn-warning\"\r\n                        disabled = { lancamento.status !== 'PENDENTE' }\r\n                        onClick={e => props.atualizarStatus(lancamento, 'CANCELADO')} >\r\n                        <Icone tipoIcone='cancelarLancamento' />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        title = \"Editar\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={e => props.editar(lancamento.id)} >\r\n                        <Icone tipoIcone='editar' />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        title = \"Deletar\"\r\n                        className=\"btn btn-danger\"\r\n                        onClick={e => props.deletar(lancamento)} >\r\n                        <Icone tipoIcone='deletar' />\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <table className=\"table table-hover\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Descrição</th>\r\n                    <th scope=\"col\">Valor</th>\r\n                    <th scope=\"col\">Mês</th>\r\n                    <th scope=\"col\">Situação</th>\r\n                    <th scope=\"col\">Ações</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","C:\\projetos\\js\\minhas-financas-app\\src\\app\\services\\lancamentoService.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\views\\lancamentos\\cadastro-lancamentos.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\app\\services\\exception\\ErroValidacao.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\components\\icon.js",[],"C:\\projetos\\js\\minhas-financas-app\\src\\app\\services\\authService.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":24,"column":10,"nodeType":"108","messageId":"109","endLine":24,"endColumn":16},{"ruleId":"106","severity":1,"message":"110","line":3,"column":17,"nodeType":"108","messageId":"109","endLine":3,"endColumn":23},{"ruleId":"111","severity":1,"message":"112","line":3,"column":1,"nodeType":"113","endLine":18,"endColumn":2},{"ruleId":"114","severity":1,"message":"115","line":112,"column":57,"nodeType":"116","messageId":"117","endLine":112,"endColumn":59},{"ruleId":"111","severity":1,"message":"112","line":6,"column":1,"nodeType":"113","endLine":68,"endColumn":2},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]